{"ast":null,"code":"var _jsxFileName = \"/Users/Ayaka.Inaba_1/code/ayakayaka/simple-mern-project/frontend/src/App.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState, useEffect } from 'react';\nimport Header from './components/Header/Header';\nimport NewProduct from './components/Products/NewProduct';\nimport ProductList from './components/Products/ProductList';\nimport './App.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nfunction App() {\n  _s();\n\n  const [loadedProducts, setLoadedProducts] = useState([]);\n  const [isLoading, setIsLoading] = useState(false);\n  useEffect(() => {\n    const fetchProducts = async () => {\n      setIsLoading(true);\n      const response = await fetch('http://localhost:5000/products');\n      const responseData = await response.json();\n      setLoadedProducts(responseData.products);\n      setIsLoading(false);\n    };\n\n    fetchProducts();\n  }, []);\n\n  const addProductHandler = async (productName, productPrice) => {\n    try {\n      const newProduct = {\n        title: productName,\n        price: +productPrice // \"+\" to convert string to number\n\n      };\n      let hasError = false;\n      const response = await fetch('http://localhost:5000/product', {\n        method: 'POST',\n        body: JSON.stringify(newProduct),\n        headers: {\n          'Content-Type': 'application/json'\n        }\n      });\n\n      if (!response.ok) {\n        hasError = true;\n      }\n\n      const responseData = await response.json();\n\n      if (hasError) {\n        throw new Error(responseData.message);\n      }\n\n      setLoadedProducts(prevProducts => {\n        return prevProducts.concat({ ...newProduct,\n          id: responseData.product.id\n        });\n      });\n    } catch (error) {\n      alert(error.message || 'Something went wrong!');\n    }\n  };\n\n  return /*#__PURE__*/_jsxDEV(React.Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(Header, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 64,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"main\", {\n      children: [/*#__PURE__*/_jsxDEV(NewProduct, {\n        onAddProduct: addProductHandler\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 66,\n        columnNumber: 9\n      }, this), isLoading && /*#__PURE__*/_jsxDEV(\"p\", {\n        className: \"loader\",\n        children: \"Loading...\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 67,\n        columnNumber: 23\n      }, this), !isLoading && /*#__PURE__*/_jsxDEV(ProductList, {\n        items: loadedProducts\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 68,\n        columnNumber: 24\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 65,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 63,\n    columnNumber: 5\n  }, this);\n}\n\n_s(App, \"ZZnZUsozVEShi7/RQB+SfDAmt+c=\");\n\n_c = App;\nexport default App;\n\nvar _c;\n\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["React","useState","useEffect","Header","NewProduct","ProductList","App","loadedProducts","setLoadedProducts","isLoading","setIsLoading","fetchProducts","response","fetch","responseData","json","products","addProductHandler","productName","productPrice","newProduct","title","price","hasError","method","body","JSON","stringify","headers","ok","Error","message","prevProducts","concat","id","product","error","alert"],"sources":["/Users/Ayaka.Inaba_1/code/ayakayaka/simple-mern-project/frontend/src/App.js"],"sourcesContent":["import React, { useState, useEffect } from 'react';\n\nimport Header from './components/Header/Header';\nimport NewProduct from './components/Products/NewProduct';\nimport ProductList from './components/Products/ProductList';\nimport './App.css';\n\nfunction App() {\n  const [loadedProducts, setLoadedProducts] = useState([]);\n  const [isLoading, setIsLoading] = useState(false);\n\n  useEffect(() => {\n    const fetchProducts = async () => {\n      setIsLoading(true);\n      const response = await fetch('http://localhost:5000/products');\n\n      const responseData = await response.json();\n\n      setLoadedProducts(responseData.products);\n      setIsLoading(false);\n    };\n\n    fetchProducts();\n  }, []);\n\n  const addProductHandler = async (productName, productPrice) => {\n    try {\n      const newProduct = {\n        title: productName,\n        price: +productPrice // \"+\" to convert string to number\n      };\n      let hasError = false;\n      const response = await fetch('http://localhost:5000/product', {\n        method: 'POST',\n        body: JSON.stringify(newProduct),\n        headers: {\n          'Content-Type': 'application/json'\n        }\n      });\n\n      if (!response.ok) {\n        hasError = true;\n      }\n\n      const responseData = await response.json();\n\n      if (hasError) {\n        throw new Error(responseData.message);\n      }\n\n      setLoadedProducts(prevProducts => {\n        return prevProducts.concat({\n          ...newProduct,\n          id: responseData.product.id\n        });\n      });\n    } catch (error) {\n      alert(error.message || 'Something went wrong!');\n    }\n  };\n\n  return (\n    <React.Fragment>\n      <Header />\n      <main>\n        <NewProduct onAddProduct={addProductHandler} />\n        {isLoading && <p className=\"loader\">Loading...</p>}\n        {!isLoading && <ProductList items={loadedProducts} />}\n      </main>\n    </React.Fragment>\n  );\n}\n\nexport default App;\n"],"mappings":";;;AAAA,OAAOA,KAAP,IAAgBC,QAAhB,EAA0BC,SAA1B,QAA2C,OAA3C;AAEA,OAAOC,MAAP,MAAmB,4BAAnB;AACA,OAAOC,UAAP,MAAuB,kCAAvB;AACA,OAAOC,WAAP,MAAwB,mCAAxB;AACA,OAAO,WAAP;;;AAEA,SAASC,GAAT,GAAe;EAAA;;EACb,MAAM,CAACC,cAAD,EAAiBC,iBAAjB,IAAsCP,QAAQ,CAAC,EAAD,CAApD;EACA,MAAM,CAACQ,SAAD,EAAYC,YAAZ,IAA4BT,QAAQ,CAAC,KAAD,CAA1C;EAEAC,SAAS,CAAC,MAAM;IACd,MAAMS,aAAa,GAAG,YAAY;MAChCD,YAAY,CAAC,IAAD,CAAZ;MACA,MAAME,QAAQ,GAAG,MAAMC,KAAK,CAAC,gCAAD,CAA5B;MAEA,MAAMC,YAAY,GAAG,MAAMF,QAAQ,CAACG,IAAT,EAA3B;MAEAP,iBAAiB,CAACM,YAAY,CAACE,QAAd,CAAjB;MACAN,YAAY,CAAC,KAAD,CAAZ;IACD,CARD;;IAUAC,aAAa;EACd,CAZQ,EAYN,EAZM,CAAT;;EAcA,MAAMM,iBAAiB,GAAG,OAAOC,WAAP,EAAoBC,YAApB,KAAqC;IAC7D,IAAI;MACF,MAAMC,UAAU,GAAG;QACjBC,KAAK,EAAEH,WADU;QAEjBI,KAAK,EAAE,CAACH,YAFS,CAEI;;MAFJ,CAAnB;MAIA,IAAII,QAAQ,GAAG,KAAf;MACA,MAAMX,QAAQ,GAAG,MAAMC,KAAK,CAAC,+BAAD,EAAkC;QAC5DW,MAAM,EAAE,MADoD;QAE5DC,IAAI,EAAEC,IAAI,CAACC,SAAL,CAAeP,UAAf,CAFsD;QAG5DQ,OAAO,EAAE;UACP,gBAAgB;QADT;MAHmD,CAAlC,CAA5B;;MAQA,IAAI,CAAChB,QAAQ,CAACiB,EAAd,EAAkB;QAChBN,QAAQ,GAAG,IAAX;MACD;;MAED,MAAMT,YAAY,GAAG,MAAMF,QAAQ,CAACG,IAAT,EAA3B;;MAEA,IAAIQ,QAAJ,EAAc;QACZ,MAAM,IAAIO,KAAJ,CAAUhB,YAAY,CAACiB,OAAvB,CAAN;MACD;;MAEDvB,iBAAiB,CAACwB,YAAY,IAAI;QAChC,OAAOA,YAAY,CAACC,MAAb,CAAoB,EACzB,GAAGb,UADsB;UAEzBc,EAAE,EAAEpB,YAAY,CAACqB,OAAb,CAAqBD;QAFA,CAApB,CAAP;MAID,CALgB,CAAjB;IAMD,CA9BD,CA8BE,OAAOE,KAAP,EAAc;MACdC,KAAK,CAACD,KAAK,CAACL,OAAN,IAAiB,uBAAlB,CAAL;IACD;EACF,CAlCD;;EAoCA,oBACE,QAAC,KAAD,CAAO,QAAP;IAAA,wBACE,QAAC,MAAD;MAAA;MAAA;MAAA;IAAA,QADF,eAEE;MAAA,wBACE,QAAC,UAAD;QAAY,YAAY,EAAEd;MAA1B;QAAA;QAAA;QAAA;MAAA,QADF,EAEGR,SAAS,iBAAI;QAAG,SAAS,EAAC,QAAb;QAAA;MAAA;QAAA;QAAA;QAAA;MAAA,QAFhB,EAGG,CAACA,SAAD,iBAAc,QAAC,WAAD;QAAa,KAAK,EAAEF;MAApB;QAAA;QAAA;QAAA;MAAA,QAHjB;IAAA;MAAA;MAAA;MAAA;IAAA,QAFF;EAAA;IAAA;IAAA;IAAA;EAAA,QADF;AAUD;;GAhEQD,G;;KAAAA,G;AAkET,eAAeA,GAAf"},"metadata":{},"sourceType":"module"}